import { Author } from "@/entities/Author";
import { Post } from "@/entities/Post";

export const authors: Author[] = [
  {
    id: "1",
    name: "Jo√£o Silva",
    avatar: "/api/placeholder/40/40",
    bio: "Desenvolvedor Full Stack apaixonado por tecnologia e inova√ß√£o",
  },
  {
    id: "2",
    name: "Maria Santos",
    avatar: "/api/placeholder/40/40",
    bio: "DevOps Engineer | Cloud Architect",
  },
  {
    id: "3",
    name: "Pedro Costa",
    avatar: "/api/placeholder/40/40",
    bio: "Frontend Developer especializado em React e UI/UX",
  },
];

export const featuredPosts: Post[] = [
  {
    id: "1",
    title: "Guia Completo de Markdown",
    excerpt:
      "Um guia abrangente sobre todos os elementos e sintaxe do Markdown.",
    content: `# T√≠tulo Principal (H1)

## Subt√≠tulo (H2)

### Se√ß√£o (H3)

#### Subse√ß√£o (H4)

##### T√≥pico (H5)

###### Subt√≥pico (H6)

Par√°grafo normal com **texto em negrito**, *texto em it√°lico*, e ***texto em negrito e it√°lico***. Voc√™ tamb√©m pode usar __negrito__ e _it√°lico_ desta forma.

Voc√™ pode ~~tachar~~ palavras tamb√©m.

## Links e Imagens

[Link para o Google](https://www.google.com)

![Imagem de exemplo](https://via.placeholder.com/800x400)

## Listas

### Lista n√£o ordenada:
* Item 1
* Item 2
  * Sub-item 2.1
  * Sub-item 2.2
* Item 3

### Lista ordenada:
1. Primeiro item
2. Segundo item
   1. Sub-item 2.1
   2. Sub-item 2.2
3. Terceiro item

## Cita√ß√µes

> Esta √© uma cita√ß√£o simples.
>
> Esta √© uma cita√ß√£o com m√∫ltiplos par√°grafos.
>
> > Esta √© uma cita√ß√£o aninhada.

## C√≥digo

C√≥digo em linha: \`const exemplo = "c√≥digo"\`

Bloco de c√≥digo:

\`\`\`javascript
function exemplo() {
  const mensagem = "Ol√°, mundo!";
  console.log(mensagem);
  return mensagem;
}
\`\`\`

\`\`\`python
def exemplo():
    mensagem = "Ol√°, mundo!"
    print(mensagem)
    return mensagem
\`\`\`

## Tabelas

| Cabe√ßalho 1 | Cabe√ßalho 2 | Cabe√ßalho 3 |
|-------------|-------------|-------------|
| C√©lula 1    | C√©lula 2    | C√©lula 3    |
| C√©lula 4    | C√©lula 5    | C√©lula 6    |
| C√©lula 7    | C√©lula 8    | C√©lula 9    |

## Linha horizontal

---

## Task Lists

- [x] Tarefa conclu√≠da
- [ ] Tarefa pendente
- [ ] Outra tarefa pendente

## Notas de rodap√©

Aqui est√° uma nota de rodap√©[^1].

[^1]: Esta √© a nota de rodap√©.

## Defini√ß√µes

Termo
: Defini√ß√£o do termo
: Outra defini√ß√£o do termo

## Emoji

Voc√™ pode incluir emojis üéâ ‚ú® üöÄ

## Destaque

==Este texto est√° destacado==

## Detalhes/Sum√°rio (HTML)

<details>
<summary>Clique para expandir</summary>

Este √© o conte√∫do que fica escondido at√© clicar.
</details>

## Matem√°tica (usando LaTeX)

Equa√ß√£o em linha: $E = mc^2$

Equa√ß√£o em bloco:

$$
\\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}
$$

---

Este √© um exemplo de todos os elementos markdown mais comuns. Voc√™ pode usar este guia como refer√™ncia para formata√ß√£o.`,
    author: authors[0],
    coverImage: "/api/placeholder/800/400",
    likes: 256,
    savedCount: 189,
    createdAt: "2024-02-20",
    readingTime: 10,
    tags: ["Markdown", "Documenta√ß√£o", "Guia"],
    slug: "guia-completo-de-markdown",
  },
  {
    id: "2",
    title: "Next.js 14: O que h√° de novo?",
    excerpt:
      "Explore as novas funcionalidades do Next.js 14 e como elas podem melhorar seu desenvolvimento.",
    content: "# Conte√∫do completo vir√° aqui em formato markdown",
    author: authors[1],
    coverImage: "/api/placeholder/800/400",
    likes: 203,
    savedCount: 167,
    createdAt: "2024-02-18",
    readingTime: 6,
    tags: ["Next.js", "Frontend", "React"],
    slug: "nextjs-14-o-que-ha-de-novo",
  },
];

export const recentPosts: Post[] = [
  {
    id: "3",
    title: "Typescript: Dicas e truques para melhorar seu c√≥digo",
    excerpt:
      "Aprenda t√©cnicas avan√ßadas de TypeScript para escrever c√≥digo mais seguro e maint√≠vel.",
    content: "# Conte√∫do completo vir√° aqui em formato markdown",
    author: authors[2],
    likes: 98,
    savedCount: 45,
    createdAt: "2024-02-17",
    readingTime: 5,
    tags: ["TypeScript", "JavaScript", "Programming"],
    slug: "typescript-dicas-e-truques-para-melhorar-seu-codigo",
    coverImage: "/api/placeholder/800/400",
  },
  {
    id: "4",
    title: "Tailwind CSS: Construindo interfaces modernas",
    excerpt:
      "Um overview sobre como utilizar Tailwind CSS para criar interfaces modernas e responsivas.",
    content: "# Conte√∫do completo vir√° aqui em formato markdown",
    author: authors[0],
    coverImage: "/api/placeholder/800/400",
    likes: 145,
    savedCount: 78,
    createdAt: "2024-02-16",
    readingTime: 7,
    tags: ["CSS", "Tailwind", "Frontend"],
    slug: "tailwind-css-construindo-interfaces-modernas",
  },
  {
    id: "5",
    title: "Clean Architecture em aplica√ß√µes Python",
    excerpt:
      "Implementando Clean Architecture em projetos Python para melhor manutenibilidade.",
    content: "# Conte√∫do completo vir√° aqui em formato markdown",
    author: authors[1],
    likes: 167,
    savedCount: 92,
    createdAt: "2024-02-15",
    readingTime: 10,
    tags: ["Python", "Architecture", "Backend"],
    slug: "clean-architecture-em-aplicacoes-python",
    coverImage: "/api/placeholder/800/400",
  },
];

export const getMostLikedPosts = () => {
  return [...featuredPosts, ...recentPosts]
    .sort((a, b) => b.likes - a.likes)
    .slice(0, 2);
};

export const getRecentPosts = () => {
  return recentPosts.sort(
    (a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime(),
  );
};

export const getPostsByAuthor = (authorId: string) => {
  return [...featuredPosts, ...recentPosts].filter(
    (post) => post.author.id === authorId,
  );
};

export const getPostsByTag = (tag: string) => {
  return [...featuredPosts, ...recentPosts].filter((post) =>
    post.tags.includes(tag),
  );
};

export const getPostBySlug = (slug: string) => {
  return [...featuredPosts, ...recentPosts].find((post) => post.slug === slug);
};
